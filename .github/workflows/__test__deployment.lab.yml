# This is a GitHub Actions workflow for testing the deployment of a Docker image to Docker Hub and creating a new release.
name: Deployment Lab Test

# This workflow is triggered when a new tag is pushed.
on:
  push:
    tags:
      - "*"

jobs:
  # This job pushes a Docker image to Docker Hub.
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # This step checks out the repository code.
      - name: Check out the repo
        uses: actions/checkout@v4

      # This step logs into Docker Hub using the provided username and password.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # This step extracts metadata (tags, labels) for the Docker image.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REGISTRY_NAME}}

      # This step builds the Docker image and pushes it to Docker Hub.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # This job creates a new release.
  build:
    name: Create Release
    runs-on: ubuntu-latest
    # This job depends on the successful completion of the 'push_to_registry' job.
    needs: [push_to_registry]
    steps:
      # This step checks out the repository code.
      - name: Checkout code
        uses: actions/checkout@v4

      # This step sets the TAG_NAME environment variable to the name of the latest git tag.
      - name: Set TAG_NAME
        run: echo "TAG_NAME=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      # This step creates a new release using the softprops/action-gh-release action.
      # The new release is created with the name and tag name set to the value of the TAG_NAME environment variable.
      # The release is not a draft or a pre-release.
      # The release notes are automatically generated.
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true